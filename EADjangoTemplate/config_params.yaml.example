INSTANCE_NAME: &instance database_name
PRODUCTION_DOMAIN: &production-domain 'example.com'
SANDBOX_DOMAIN: &sandbox-domain 'sandbox.example.com'
APP_PATH: &base_dir '/var/www/{{app_name}}'
DBHOST: &dbhost 'db.example.com'

SECRETS:
  defaults:
    sentry_dsn: ""
    mail_password: ''
    redis_password: ''
  production:
    dbpassword: ''
    secret_key: ''
  sandbox:
    dbpassword: ''
    secret_key: ''

production:
  db_settings:
      dbname: *instance
      dbuser: *instance
  host_name: &production-host_name
   - *production-domain
  url: *production-domain
  nginx_settings:
    host_name: *production-host_name
    nginx_conf: freddiemac
    upstream: *instance
  django_settings:
    debug: False
  www_path: *base_dir
  apps:
    gui:
      name: 'app-gui'
      path: 'gui'
      environment:
          baseBackendUrl: 'https://example.com/'

sandbox:
  db_settings:
      dbname: *instance
      dbuser: *instance
  host_name: &sandbox-host_name
   - *sandbox-domain
  url: *sandbox-domain
  nginx_settings:
    host_name: *sandbox-host_name
    nginx_conf: freddiemac
    upstream: *instance
  django_settings:
    debug: True
  www_path: *base_dir
  apps:
    gui:
      name: 'app-gui'
      path: 'gui'
      environment:
          baseBackendUrl: 'https://sandbox.example.com/'


defaults:
  suffix: True
  mail_server: &mail_server '127.0.0.1'

  nginx_settings:
    server: '127.0.0.1'
    port: 8000
    app_name: *instance

  db_settings:
    dbhost: *dbhost
    dbtype:  postgres
    dbport: 5432
    # For use when one DB server handles traffic from multiple app servers.
    # Add one a line per app server IP address.
    pg_hba:
      - {db: 'all', dbuser: 'all', address: '147.182.199.29/32'}
      - {db: 'all', dbuser: 'all', address: '164.92.114.114/32'}
      - {db: 'all', dbuser: 'all', address: '64.225.90.115/32'}
    extensions:
      - citext

  mail_settings:
    mail_host: *mail_server
    email_host: 'smtp.gmail.com'
    email_port: 587
    email_user: 'noreply@greenbuildingregistry.com'
    email_domain: 'greenbuildingregistry.com'

  django_settings:
    settings: config.production
    fake_initial: False
    requirements_file: 'requirements/production.txt'
    uwsgi_file_name: 'uwsgi.py'
    settings_dir: 'config'
    nested_app_dir: 'backend'
    cache_location: '127.0.0.1:6379'
    debug: False

  apps:
    gui:
      name: 'app-gui'
      path: 'gui'

  libs:  # List of Angular libraries in the order they must be built
    - vendors
    - lib-tools
    - lib-alerts
    - lib-errors
    - lib-apis
    - lib-users
    - lib-files
